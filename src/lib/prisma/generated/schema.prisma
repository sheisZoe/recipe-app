generator client {
  provider        = "prisma-client-js"
  output          = "../src/lib/prisma/generated"
  previewFeatures = ["fullTextSearchPostgres"]
  seed            = "ts-node --transpile-only prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  firstName   String
  lastName    String
  phoneNumber Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                 String     @id @default(uuid())
  slug               String
  name               String
  ingredients        String[]
  instructions       String[]
  mealType           String[]
  description        String
  prepTimeMinutes    Int?
  cookTimeMinutes    Int?
  servings           Int?
  caloriesPerServing Int?
  tags               String[]
  difficulty         Difficulty
  image              Image[]
  cuisineId          String
  favorite           Favorite[]
  cuisine            Cuisine    @relation(fields: [cuisineId], references: [id], onDelete: Cascade)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
}

model Image {
  id           String @id @default(uuid())
  url          String
  fileId       String
  thumbnailUrl String
  filePath     String
  productId    String

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Favorite {
  id        String   @id @default(uuid())
  productId String
  products  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Cuisine {
  id   String @id @default(uuid())
  slug String
  name String

  products  Product[]
  createdAt DateTime  @default(now())
}

enum Difficulty {
  Easy
  Medium
  Hard
}
